name: unpack-solution
on:
  push:
    branches:
      - main
    paths:
      - 'Solutions/**'

jobs:

  unpack-solution:
    runs-on: ubuntu-latest
    env:
      SOLUTION_NAME: ''
      SOLUTION_VERSION: ''
    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Retrieve changed files from commit
      - uses: masesgroup/retrieve-changed-files@v2
        id: files
        
      # Split the file name to get the solution name and version
      - uses: jungwinter/split@v2
        id: split_underscore
        name: Split underscores
        with:
          msg: ${{ steps.files.outputs.all }}
          separator: _

      - uses: jungwinter/split@v2
        name: Split forward slash      
        id: split_slash
        with:
          msg: ${{ steps.split_underscore.outputs._0 }}
          separator: /

      - name: Solution Name
        run: echo "SOLUTION_NAME=${{ steps.split_slash.outputs._1 }}" >> $GITHUB_ENV
      
      - name: Solution Version
        run: echo "SOLUTION_VERSION=${{ steps.split_underscore.outputs._1 }}.${{ steps.split_underscore.outputs._2 }}.${{ steps.split_underscore.outputs._3 }}.${{ steps.split_underscore.outputs._4 }}" >> $GITHUB_ENV

      # Unpack the solution
      - uses: microsoft/powerplatform-actions/unpack-solution@v0
        name: unpack-solution action   
        with:
          solution-file: ${{ steps.files.outputs.all }}
          solution-folder: Solutions_Unpacked/${{ env.SOLUTION_NAME }}
          solution-type: 'Unmanaged'
          overwrite-files: true

      # Commit the unpacked solution
      - name: Commit Changes
        run: |
          git config --global user.name 'action@github.com'
          git config --global user.email 'GitHub Action'
          git add --all
          git commit -m "Unpack of ${{ env.SOLUTION_NAME }}_${{ env.SOLUTION_VERSION }} solution"
          git  -c http.extraheader="AUTHORIZATION: Bearer ${{ secrets.GITHUB_TOKEN }}" push origin main
        
      
  
      